name: ReportPortal CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-group: [ui, api]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Run Tests
        run: |
          if [ "${{ matrix.test-group }}" == "ui" ]; then
            mvn test -Dgroups=UI -Dallure.results.directory=target/allure-results
          else
            mvn test -Dgroups=API -Dallure.results.directory=target/allure-results
          fi

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.test-group }}
          path: target/allure-results/

  report:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-ui
          path: target/allure-results/ui
      - name: Download API Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-api
          path: target/allure-results/api
          
      - name: Generate Allure Report
        run: |
          mvn allure:report
          mkdir -p target/allure-report
          cp -R target/site/allure-maven-plugin/* target/allure-report/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/allure-report
          keep_files: true
